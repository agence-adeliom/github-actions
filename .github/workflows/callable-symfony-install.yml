name: Install project libs and compile

on:
    workflow_call:
        inputs:
            php:
                required: true
                type: string
                default: "8.1"
            node:
                required: true
                type: string
                default: "18"
            working-directory:
                required: false
                type: string
                default: "."

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
             # On copie le repo
            - uses: actions/checkout@v3

            # On installe PHP
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ inputs.php }}

            # On créé le cache de composer pour prendre moins de temps à build
            - name: Get Composer Cache Directory
              id: composer-cache
              working-directory: ${{ inputs.working-directory }}
              run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            # On récupère le cache de composer du step précédent
            - uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

            - name: Check Composer lock file is up to date
              working-directory: ${{ inputs.working-directory }}
              run: composer validate --no-check-all

            - name: Install Composer dependencies
              working-directory: ${{ inputs.working-directory }}
              run: composer install --no-progress --prefer-dist --optimize-autoloader

            # On install NodeJS
            - uses: actions/setup-node@v3
              with:
                  node-version: ${{ inputs.node }}
                  cache: npm
                  cache-dependency-path: '${{ inputs.working-directory }}/package-lock.json'

            # On install les dependances Node
            - name: Install NPM dependencies
              working-directory: ${{ inputs.working-directory }}
              run: npm ci

            # On joue les tests front
            - name: Run NPM test suite
              working-directory: ${{ inputs.working-directory }}
              run: npm run test --if-present

            # On build le front
            - name: Try to build theme's assets
              working-directory: ${{ inputs.working-directory }}
              run: npm run build --if-present

name: Deployer

on:
    workflow_call:
        inputs:
            php:
                required: true
                type: number
            node:
                required: true
                type: number
            branch:
                required: true
                type: string
            deployer:
                required: false
                type: string
                default: "7.0.2"
        secrets:
            PRIVATE_KEY:
                required: true
            PERSONAL_TOKEN:
                required: true
            DEPLOYER_INVENTORY:
                required: true

jobs:
    deployer:
        name: üéâ Deployer
        runs-on: ubuntu-latest
        steps:
            - name: D√©finition du host
              if: ${{ inputs.BRANCH == 'main' || inputs.BRANCH == 'master' }}
              run: echo "HOST=production" >> $GITHUB_ENV
              shell: bash

            - name: D√©finition du host
              if: ${{ inputs.BRANCH == 'develop' }}
              run: echo "HOST=staging" >> $GITHUB_ENV
              shell: bash

            - name: R√©cup√©ration du repository
              if: ${{ env.HOST }}
              uses: actions/checkout@v3

            - name: Retrieve the secret inventory and decode it to a file
              env:
                  DEPLOYER_INVENTORY: ${{ secrets.DEPLOYER_INVENTORY }}
              run: |
                  echo $DEPLOYER_INVENTORY | base64 --decode > inventory.yaml

            - name: Installation de PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ inputs.php }}
                  coverage: xdebug

            - name: Validation du composer.lock
              run: composer validate --no-check-all

            - name: Installation des d√©pendances Composer
              run: composer install --no-progress --prefer-dist --optimize-autoloader

            - name: Installation de NodeJS ${{ inputs.node }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ inputs.node }}

            - name: Installation des d√©pendances NPM
              run: npm ci

            - name: Lancement des test NPM
              run: npm run test --if-present

            - name: D√©ploiement sur l'environnement ${{ env.HOST }} avec la branche ${{ inputs.BRANCH }}
              uses: deployphp/action@v1
              with:
                  deployer-version: ${{ input.deployer }}
                  private-key: ${{ secrets.PRIVATE_KEY }}
                  dep: deploy --branch=${{ inputs.BRANCH }} -n ${{ env.HOST }}
              env:
                  PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}